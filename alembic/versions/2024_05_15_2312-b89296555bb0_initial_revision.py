"""Initial revision

Revision ID: b89296555bb0
Revises:
Create Date: 2024-05-15 23:12:38.165710

"""

from typing import Sequence, Union
import core

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b89296555bb0"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "backoffice_permissionpolicy",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.String(length=200), nullable=True),
        sa.Column(
            "is_active", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column(
            "permissions", sa.ARRAY(sa.String()), server_default="{}", nullable=True
        ),
        sa.Column(
            "created_at",
            core.db.DateTimeField(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            core.db.DateTimeField(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(
        op.f("ix_backoffice_permissionpolicy_id"),
        "backoffice_permissionpolicy",
        ["id"],
        unique=False,
    )
    op.create_table(
        "user_user",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=300), nullable=False),
        sa.Column("email", sa.String(length=512), nullable=True),
        sa.Column("password", sa.String(length=200), nullable=True),
        sa.Column("profile_picture", sa.String(), nullable=True),
        sa.Column("phone_number", sa.String(length=80), nullable=False),
        sa.Column(
            "is_active", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column(
            "is_locked", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column(
            "status",
            sa.Enum(
                "Inactive",
                "Blocked",
                "Whitelisted",
                "Password Locked",
                native_enum=False,
            ),
            nullable=True,
        ),
        sa.Column(
            "created_at",
            core.db.DateTimeField(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            core.db.DateTimeField(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("last_login", core.db.DateTimeField(timezone=True), nullable=True),
        sa.Column("date_of_birth", sa.Date(), nullable=True),
        sa.Column("access_token_id", sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("access_token_id"),
    )
    op.create_index(
        op.f("ix_user_user_created_at"), "user_user", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_user_user_id"), "user_user", ["id"], unique=False)
    op.create_index(
        op.f("ix_user_user_phone_number"), "user_user", ["phone_number"], unique=True
    )
    op.create_index(op.f("ix_user_user_status"), "user_user", ["status"], unique=False)
    op.create_index(
        op.f("ix_user_user_updated_at"), "user_user", ["updated_at"], unique=False
    )
    op.create_table(
        "user_userloginsession",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=True),
        sa.Column("otp", sa.String(), nullable=True),
        sa.Column("otp_tries", sa.Integer(), server_default="0", nullable=False),
        sa.Column("phone_number", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            core.db.DateTimeField(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            core.db.DateTimeField(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "otp_verified",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
        ),
        sa.Column("login_time", core.db.DateTimeField(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_userloginsession_id"),
        "user_userloginsession",
        ["id"],
        unique=False,
    )
    op.create_table(
        "user_userotp",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("phone_number", sa.String(length=20), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=True),
        sa.Column(
            "otp_type",
            sa.Enum("Password", "Login", "SignUp", native_enum=False),
            nullable=False,
        ),
        sa.Column("otp_value", sa.String(length=6), nullable=False),
        sa.Column("otp_reference_number", sa.String(length=16), nullable=False),
        sa.Column("message_body", sa.String(length=2000), nullable=False),
        sa.Column(
            "status",
            sa.Enum("Active", "Inactive", "Pending", native_enum=False),
            server_default="Pending",
            nullable=True,
        ),
        sa.Column(
            "created_at",
            core.db.DateTimeField(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_userotp_created_at"), "user_userotp", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_user_userotp_id"), "user_userotp", ["id"], unique=True)
    op.create_index(
        op.f("ix_user_userotp_user_id"), "user_userotp", ["user_id"], unique=False
    )
    op.create_table(
        "user_userpasswordhistory",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=True),
        sa.Column("old_password", sa.String(length=200), nullable=True),
        sa.Column("new_password", sa.String(length=200), nullable=True),
        sa.Column("otp_reference_number", sa.String(length=16), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("otp_reference_number"),
    )
    op.create_index(
        op.f("ix_user_userpasswordhistory_id"),
        "user_userpasswordhistory",
        ["id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_user_userpasswordhistory_user_id"),
        "user_userpasswordhistory",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "backoffice_staffuser",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "role", sa.Enum("Backoffice", "Company", native_enum=False), nullable=False
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("phone_number", sa.String(length=20), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("password_history", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("login_attempt", sa.Integer(), server_default="0", nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "Active",
                "Inactive",
                "Blocked",
                "Terminated",
                "Password Locked",
                native_enum=False,
            ),
            nullable=False,
        ),
        sa.Column("status_remarks", sa.String(), nullable=True),
        sa.Column(
            "force_change_password",
            sa.Boolean(),
            server_default=sa.text("true"),
            nullable=False,
        ),
        sa.Column(
            "password_updated_at", core.db.DateTimeField(timezone=True), nullable=True
        ),
        sa.Column("permission_policy_id", sa.Integer(), nullable=True),
        sa.Column(
            "is_superuser",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["permission_policy_id"],
            ["backoffice_permissionpolicy.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_backoffice_staffuser_id"), "backoffice_staffuser", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_backoffice_staffuser_username"),
        "backoffice_staffuser",
        ["username"],
        unique=True,
    )
    op.create_table(
        "backoffice_passwordresettoken",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            core.db.DateTimeField(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["backoffice_staffuser.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_backoffice_passwordresettoken_id"),
        "backoffice_passwordresettoken",
        ["id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_backoffice_passwordresettoken_id"),
        table_name="backoffice_passwordresettoken",
    )
    op.drop_table("backoffice_passwordresettoken")
    op.drop_index(
        op.f("ix_backoffice_staffuser_username"), table_name="backoffice_staffuser"
    )
    op.drop_index(op.f("ix_backoffice_staffuser_id"), table_name="backoffice_staffuser")
    op.drop_table("backoffice_staffuser")
    op.drop_index(
        op.f("ix_user_userpasswordhistory_user_id"),
        table_name="user_userpasswordhistory",
    )
    op.drop_index(
        op.f("ix_user_userpasswordhistory_id"), table_name="user_userpasswordhistory"
    )
    op.drop_table("user_userpasswordhistory")
    op.drop_index(op.f("ix_user_userotp_user_id"), table_name="user_userotp")
    op.drop_index(op.f("ix_user_userotp_id"), table_name="user_userotp")
    op.drop_index(op.f("ix_user_userotp_created_at"), table_name="user_userotp")
    op.drop_table("user_userotp")
    op.drop_index(
        op.f("ix_user_userloginsession_id"), table_name="user_userloginsession"
    )
    op.drop_table("user_userloginsession")
    op.drop_index(op.f("ix_user_user_updated_at"), table_name="user_user")
    op.drop_index(op.f("ix_user_user_status"), table_name="user_user")
    op.drop_index(op.f("ix_user_user_phone_number"), table_name="user_user")
    op.drop_index(op.f("ix_user_user_id"), table_name="user_user")
    op.drop_index(op.f("ix_user_user_created_at"), table_name="user_user")
    op.drop_table("user_user")
    op.drop_index(
        op.f("ix_backoffice_permissionpolicy_id"),
        table_name="backoffice_permissionpolicy",
    )
    op.drop_table("backoffice_permissionpolicy")
    # ### end Alembic commands ###
